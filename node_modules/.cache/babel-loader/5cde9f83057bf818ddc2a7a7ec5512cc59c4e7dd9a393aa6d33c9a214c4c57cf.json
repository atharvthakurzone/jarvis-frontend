{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\jarvis-web\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst models = [{\n  id: \"jarvis-custom\",\n  name: \"Jarvis (Personal AI)\"\n}, {\n  id: \"mistralai/mistral-7b-instruct\",\n  name: \"Mistral 7B Instruct\"\n}, {\n  id: \"huggingfaceh4/zephyr-7b-beta\",\n  name: \"Zephyr 7B Beta\"\n}, {\n  id: \"openai/gpt-3.5-turbo\",\n  name: \"GPT-3.5 Turbo\"\n}, {\n  id: \"meta-llama/llama-2-70b-chat\",\n  name: \"LLaMA 2 70B Chat\"\n}, {\n  id: \"google/gemma-7b-it\",\n  name: \"Gemma 7B It\"\n}];\nconst App = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [jarvisMemory, setJarvisMemory] = useState(() => {\n    const saved = localStorage.getItem(\"jarvisMemory\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [selectedModel, setSelectedModel] = useState(models[0].id);\n  const [controller, setController] = useState(null);\n  const [speakMode, setSpeakMode] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(\"jarvisMemory\", JSON.stringify(jarvisMemory));\n  }, [jarvisMemory]);\n  const handleSubmit = async (msg = input) => {\n    if (!msg.trim()) return;\n    const abortCtrl = new AbortController();\n    setController(abortCtrl);\n    const userMsg = {\n      role: \"user\",\n      content: msg\n    };\n    setChatHistory(prev => [...prev, userMsg]);\n    setInput(\"\");\n    const memoryContext = jarvisMemory.map(entry => `${entry.q}\\n${entry.a}`).join('\\n');\n    const combinedQuery = `${memoryContext}\\n${msg}`.trim();\n    try {\n      const response = await fetch(\"http://localhost:3001/api/jarvis\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: combinedQuery,\n          model: selectedModel === \"jarvis-custom\" ? \"openai/gpt-3.5-turbo\" : selectedModel\n        }),\n        signal: abortCtrl.signal\n      });\n      const data = await response.json();\n      const jarvisMsg = {\n        role: \"jarvis\",\n        content: data.reply\n      };\n      setChatHistory(prev => [...prev, jarvisMsg]);\n      setJarvisMemory(prev => [...prev, {\n        q: msg,\n        a: data.reply\n      }]);\n      if (speakMode) {\n        const utterance = new SpeechSynthesisUtterance(data.reply);\n        speechSynthesis.speak(utterance);\n      }\n      setSpeakMode(false);\n    } catch (err) {\n      if (err.name === 'AbortError') {\n        console.log(\"Fetch aborted\");\n      } else {\n        console.error(\"Error:\", err);\n      }\n    }\n  };\n  const handleStop = () => {\n    if (controller) controller.abort();\n    speechSynthesis.cancel();\n  };\n  const handleVoiceInput = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setSpeakMode(true);\n      handleSubmit(transcript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n    recognition.onend = () => {\n      console.log(\"Voice input ended\");\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gray-800 p-4 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 text-white\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), chatHistory.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.role === \"user\" ? \"text-blue-400\" : \"text-green-400\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === \"user\" ? \"You\" : \"Jarvis\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-4 bg-gray-700 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"bg-gray-900 text-white p-2 rounded mr-2\",\n          value: selectedModel,\n          onChange: e => setSelectedModel(e.target.value),\n          children: models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.id,\n            children: model.name\n          }, model.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 p-2 rounded bg-gray-800 text-white mr-2\",\n          placeholder: \"Type your command...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 px-4 py-2 rounded\",\n          onClick: () => handleSubmit(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-yellow-500 px-4 py-2 rounded ml-2\",\n          onClick: handleVoiceInput,\n          children: \"\\uD83C\\uDFA4 Speak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 px-4 py-2 rounded ml-2\",\n          onClick: handleStop,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: chatHistory.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-2 ${msg.role === \"user\" ? \"text-blue-400\" : \"text-green-400\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.role === \"user\" ? \"You\" : \"Jarvis\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), \" \", msg.content]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AzNm+oPBCRln/9cTYFVrdAs96I4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","models","id","name","App","_s","input","setInput","chatHistory","setChatHistory","jarvisMemory","setJarvisMemory","saved","localStorage","getItem","JSON","parse","selectedModel","setSelectedModel","controller","setController","speakMode","setSpeakMode","setItem","stringify","handleSubmit","msg","trim","abortCtrl","AbortController","userMsg","role","content","prev","memoryContext","map","entry","q","a","join","combinedQuery","response","fetch","method","headers","body","query","model","signal","data","json","jarvisMsg","reply","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","err","console","log","error","handleStop","abort","cancel","handleVoiceInput","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","start","onresult","event","transcript","results","onerror","onend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/jarvis-web/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst models = [\r\n  { id: \"jarvis-custom\", name: \"Jarvis (Personal AI)\" },\r\n  { id: \"mistralai/mistral-7b-instruct\", name: \"Mistral 7B Instruct\" },\r\n  { id: \"huggingfaceh4/zephyr-7b-beta\", name: \"Zephyr 7B Beta\" },\r\n  { id: \"openai/gpt-3.5-turbo\", name: \"GPT-3.5 Turbo\" },\r\n  { id: \"meta-llama/llama-2-70b-chat\", name: \"LLaMA 2 70B Chat\" },\r\n  { id: \"google/gemma-7b-it\", name: \"Gemma 7B It\" }\r\n];\r\n\r\nconst App = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [jarvisMemory, setJarvisMemory] = useState(() => {\r\n    const saved = localStorage.getItem(\"jarvisMemory\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [selectedModel, setSelectedModel] = useState(models[0].id);\r\n  const [controller, setController] = useState(null);\r\n  const [speakMode, setSpeakMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"jarvisMemory\", JSON.stringify(jarvisMemory));\r\n  }, [jarvisMemory]);\r\n\r\n  const handleSubmit = async (msg = input) => {\r\n    if (!msg.trim()) return;\r\n\r\n    const abortCtrl = new AbortController();\r\n    setController(abortCtrl);\r\n\r\n    const userMsg = { role: \"user\", content: msg };\r\n    setChatHistory(prev => [...prev, userMsg]);\r\n    setInput(\"\");\r\n\r\n    const memoryContext = jarvisMemory.map(entry => `${entry.q}\\n${entry.a}`).join('\\n');\r\n    const combinedQuery = `${memoryContext}\\n${msg}`.trim();\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/jarvis\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: combinedQuery,\r\n          model: selectedModel === \"jarvis-custom\" ? \"openai/gpt-3.5-turbo\" : selectedModel\r\n        }),\r\n        signal: abortCtrl.signal\r\n      });\r\n\r\n      const data = await response.json();\r\n      const jarvisMsg = { role: \"jarvis\", content: data.reply };\r\n      setChatHistory(prev => [...prev, jarvisMsg]);\r\n      setJarvisMemory(prev => [...prev, { q: msg, a: data.reply }]);\r\n\r\n      if (speakMode) {\r\n        const utterance = new SpeechSynthesisUtterance(data.reply);\r\n        speechSynthesis.speak(utterance);\r\n      }\r\n\r\n      setSpeakMode(false);\r\n    } catch (err) {\r\n      if (err.name === 'AbortError') {\r\n        console.log(\"Fetch aborted\");\r\n      } else {\r\n        console.error(\"Error:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStop = () => {\r\n    if (controller) controller.abort();\r\n    speechSynthesis.cancel();\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognition.lang = 'en-US';\r\n    recognition.start();\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setSpeakMode(true);\r\n      handleSubmit(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error:\", event.error);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      console.log(\"Voice input ended\");\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"w-64 bg-gray-800 p-4 overflow-y-auto\">\r\n        <h2 className=\"text-xl font-bold mb-4 text-white\">Chats</h2>\r\n        {chatHistory.map((msg, idx) => (\r\n          <div key={idx} className={`mb-2 ${msg.role === \"user\" ? \"text-blue-400\" : \"text-green-400\"}`}>\r\n            <strong>{msg.role === \"user\" ? \"You\" : \"Jarvis\"}:</strong> {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"flex-1 flex flex-col\">\r\n        <div className=\"flex p-4 bg-gray-700 items-center\">\r\n          <select\r\n            className=\"bg-gray-900 text-white p-2 rounded mr-2\"\r\n            value={selectedModel}\r\n            onChange={e => setSelectedModel(e.target.value)}\r\n          >\r\n            {models.map(model => (\r\n              <option key={model.id} value={model.id}>{model.name}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            className=\"flex-1 p-2 rounded bg-gray-800 text-white mr-2\"\r\n            placeholder=\"Type your command...\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            onKeyDown={e => e.key === 'Enter' && handleSubmit()}\r\n          />\r\n          <button className=\"bg-blue-500 px-4 py-2 rounded\" onClick={() => handleSubmit()}>\r\n            Send\r\n          </button>\r\n          <button className=\"bg-yellow-500 px-4 py-2 rounded ml-2\" onClick={handleVoiceInput}>\r\n            🎤 Speak\r\n          </button>\r\n          <button className=\"bg-red-500 px-4 py-2 rounded ml-2\" onClick={handleStop}>\r\n            Stop\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex-1 p-4 overflow-y-auto\">\r\n          {chatHistory.map((msg, idx) => (\r\n            <div key={idx} className={`mb-2 ${msg.role === \"user\" ? \"text-blue-400\" : \"text-green-400\"}`}>\r\n              <strong>{msg.role === \"user\" ? \"You\" : \"Jarvis\"}:</strong> {msg.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}